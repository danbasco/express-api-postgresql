info:
  name: MongoDB-Express API
  schema: https://schema.getpostman.com/json/collection/v2.1.0/collection.json
variable:
  - key: baseUrl
    value: 'http://atv-parte1-fullstack.danielvasconcelos.me/'
  - key: token
    value: ''
item:
  - name: Cadastro
    item:
      - name: Cadastro Bem Sucedido
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "name": "daniel123",
                "email": "daniel123@email.com",
                "password": "Daniel123!"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/register"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - register
      - name: Erro: Senha Invalida
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "name": "daniel123",
                "email": "daniel123@email.com",
                "password": "123"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/register"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - register
      - name: Erro: Email repetido
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "name": "daniel123",
                "email": "daniel123@email.com",
                "password": "Daniel123!"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/register"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - register
      - name: Erro: Email invalido
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "name": "daniel123",
                "email": "not-an-email",
                "password": "Daniel123!"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/register"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - register
      - name: Erro: Requisição mal formatada
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "email": "missingname@example.com"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/register"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - register

  - name: Login
    item:
      - name: Login Bem Sucedido
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "email": "daniel123@email.com",
                "password": "Daniel123!"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/login"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - login
      - name: Erro: Senha invalida
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "email": "daniel123@email.com",
                "password": "wrongpassword"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/login"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - login
      - name: Erro: Email Invalido
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "email": "not-an-email",
                "password": "somepassword"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/login"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - login
      - name: Erro: Requisição mal formatada
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
          body:
            mode: raw
            raw: |
              {
                "password": "noemailprovided"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/users/login"
            host:
              - "{{baseUrl}}"
            path:
              - users
              - login

  - name: Protected
    item:
      - name: Rota Protected Conectada
        request:
          method: GET
          header:
            - key: Authorization
              value: "Bearer {{token}}"
            - key: Accept
              value: application/json
          url:
            raw: "{{baseUrl}}/protected"
            host:
              - "{{baseUrl}}"
            path:
              - protected
      - name: Acesso Sem Token
        request:
          method: GET
          header:
            - key: Accept
              value: application/json
          url:
            raw: "{{baseUrl}}/protected"
            host:
              - "{{baseUrl}}"
            path:
              - protected
      - name: Token Invalido
        request:
          method: GET
          header:
            - key: Authorization
              value: "Bearer invalid.token.here"
            - key: Accept
              value: application/json
          url:
            raw: "{{baseUrl}}/protected"
            host:
              - "{{baseUrl}}"
            path:
              - protected
  - name: Livros
    item:
      - name: Listar Livros
        request:
          method: GET
          header:
            - key: Accept
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books"
            host:
              - "{{baseUrl}}"
            path:
              - books
      - name: Adicionar Livro
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          body:
            mode: raw
            raw: |
              {
                "title": "New Book Title",
                "author": "Author Name",
                "description": "A brief description of the book.",
                "genre": ["Fiction"],
                "status": "READING"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/books"
            host:
              - "{{baseUrl}}"
            path:
              - books
      - name: Adicionar Livro com Dados Incompletos
        request:
          method: POST
          header:
            - key: Content-Type
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          body:
            mode: raw
            raw: |
              {
                "title": "Incomplete Book"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/books"
            host:
              - "{{baseUrl}}"
            path:
              - books
      - name: Deletar Livro
        request:
          method: DELETE
          header:
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books/{{bookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{bookId}}"
      - name: Filtrar Livros por status
        request:
          method: GET
          header:
            - key: Accept
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books?status=READING"
            host:
              - "{{baseUrl}}"
            path:
              - books
            query:
              - key: status
                value: READING
      - name: Buscar Livro por ID
        request:
          method: GET
          header:
            - key: Accept
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books/{{bookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{bookId}}"
      - name: Erro: Livro de outro usuário
        request:
          method: GET
          header:
            - key: Accept
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books/{{otherUserBookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{otherUserBookId}}"
      - name: Atualizar Livro
        request:
          method: PUT
          header:
            - key: Content-Type
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          body:
            mode: raw
            raw: |
              {
                "title": "Updated Book Title",
                "author": "Updated Author Name",
                "description": "An updated brief description of the book.",
                "genre": ["Non-Fiction"],
                "status": "COMPLETED"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/books/{{bookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{bookId}}"
      - name: Atualizar Livro com Dados Incompletos
        request:
          method: PATCH
          header:
            - key: Content-Type
              value: application/json
            - key: Authorization
              value: "Bearer {{token}}"
          body:
            mode: raw
            raw: |
              {
                "status": "DROPPED"
              }
            options:
              raw:
                language: json
          url:
            raw: "{{baseUrl}}/books/{{bookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{bookId}}"
      - name: Deletar Livro
        request:
          method: DELETE
          header:
            - key: Authorization
              value: "Bearer {{token}}"
          url:
            raw: "{{baseUrl}}/books/{{bookId}}"
            host:
              - "{{baseUrl}}"
            path:
              - books
              - "{{bookId}}"